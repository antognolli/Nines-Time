#!/usr/bin/python

from os.path import abspath, join
from ecore.evas import SoftwareX11
from ecore import main_loop_begin, main_loop_quit, animator_frametime_set, \
	timer_add
from edje import Edje
from collections import defaultdict
from functools import partial
from time import strftime, gmtime

DATA_DIR = abspath("./data")
THEME = join(DATA_DIR, "theme", "default.edj")


hooks = defaultdict(list)

def add_hook(kind, fn, *args, **kwargs):
    hooks[kind].append(partial(fn, *args, **kwargs))

def fire_hooks(kind, *args, **kwargs):
    for hook in hooks[kind]:
        hook(*args, **kwargs)

def resize_cb(ee):
    for d in ["bg", "menu", "game", "win", "lose"]:
	ee.data[d].size = ee.evas.size

def win_screen(ee):
    def _on_show():
        win.focus = True
	win.show()

    def _on_key_down(obj, event):
	kn = event.keyname
	if kn  == "Escape":
	    win.hide()
	    fire_hooks("show_menu")

    win = Edje(ee.evas, file=THEME, group="win")
    win.size = ee.evas.size
    win.on_key_down_add(_on_key_down)
    ee.data["win"] = win
    add_hook("win", _on_show)

def lose_screen(ee):
    def _on_show():
        lose.focus = True
	lose.show()

    def _on_key_down(obj, event):
	kn = event.keyname
	if kn  == "Escape":
	    lose.hide()
	    fire_hooks("show_menu")

    lose = Edje(ee.evas, file=THEME, group="lose")
    lose.size = ee.evas.size
    lose.on_key_down_add(_on_key_down)
    ee.data["lose"] = lose
    add_hook("lose", _on_show)

def game_screen(ee):
    def _tick(ee):
	ee.data["time"] = ee.data["time"] - 1
	time = strftime("%M:%S", gmtime(ee.data["time"]))
	ee.data["game"].part_text_set("time", time)
	if (ee.data["time"] < 1):
	    game.hide()
	    fire_hooks("win")
	    return False
	return True

    def _on_show(ee):
	ee.data["game"].part_text_set("time", "09:00")
	ee.data["time"] = 540
	ee.data["timer"] = timer_add(1, _tick, ee)
        game.focus = True
	game.show()

    def _on_key_down(obj, event, ee):
	kn = event.keyname
	if kn  == "Escape":
	    ee.data["timer"].delete()
	    game.hide()
	    fire_hooks("show_menu")

    game = Edje(ee.evas, file=THEME, group="game")
    game.size = ee.evas.size
    game.on_key_down_add(_on_key_down, ee)
    ee.data["game"] = game
    add_hook("start_game", _on_show, ee)

def menu_screen(ee):
    def _on_show():
        menu.focus = True
	menu.show()

    def _on_key_down(obj, event):
	kn = event.keyname
	if kn  == "Escape":
	    main_loop_quit()
	elif kn == "Return":
	    menu.hide()
	    fire_hooks("start_game")

    menu = Edje(ee.evas, file=THEME, group="menu")
    menu.size = ee.evas.size
    menu.on_key_down_add(_on_key_down)
    menu.focus = True
    menu.show()
    ee.data["menu"] = menu
    add_hook("show_menu", _on_show)

def game_main():
    # FIXME get it from a file so user don't need to change it every time
    screen_size = (400, 600)
    ee = SoftwareX11(w=screen_size[0], h=screen_size[1])

    canvas = ee.evas
    bg = canvas.Rectangle(color=(0, 0, 0, 255))
    bg.size = canvas.size
    bg.show()

    ee.data["bg"] = bg
    ee.data["score"] = 0
    # FIXME get it from a file
    ee.data["hi-score"] = 0
    ee.size_min_set(*screen_size)
    ee.callback_resize = resize_cb
    ee.title = "Nines Time"

    menu_screen(ee)
    game_screen(ee)
    win_screen(ee)
    lose_screen(ee)

    # Sets the framerate of the game to 60FPS
    animator_frametime_set(1.0 / 60.0)

    ee.show()
    main_loop_begin()

    del canvas
    del ee


if __name__ == "__main__":
    game_main()
